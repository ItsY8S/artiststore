{"version":3,"file":"static/development/pages/singleProduct.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AddToCart.js","webpack:///./components/ErrorMessage.js","webpack:///./components/Pagination.js","webpack:///./components/Product.js","webpack:///./components/Products.js","webpack:///./components/SingleProduct.js","webpack:///./components/Title.js","webpack:///./components/User.js","webpack:///./config.js","webpack:///./lib/formatMoney.js","webpack:///./pages/singleProduct.js","webpack:///external \"graphql-tag\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`\n\nclass AddToCart extends React.Component {\n  render() {\n    const { id } = this.props\n    return (\n      <Mutation\n        mutation={ADD_TO_CART_MUTATION}\n        variables={{\n          id\n        }}\n      >\n        {addToCart => <button onClick={addToCart}>Add To Cart üõí</button>}\n      </Mutation>\n    )\n  }\n}\nexport default AddToCart\n","import styled from 'styled-components'\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null\n  if (\n    error.networkError &&\n    error.networkError.result &&\n    error.networkError.result.errors.length\n  ) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Shoot!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ))\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Shoot!</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  )\n}\n\nDisplayError.defaultProps = {\n  error: {}\n}\n\nDisplayError.propTypes = {\n  error: PropTypes.object\n}\n\nexport default DisplayError\n","import React from 'react'\nimport Link from 'next/link'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport { perPage } from '../config'\nimport Head from 'next/head'\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    productsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`\n\nconst Pagination = props => {\n  return (\n    <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return <p>Loading...</p>\n        const count = data.productsConnection.aggregate.count\n        const pages = Math.ceil(count / perPage)\n        const page = props.page\n        return (\n          <>\n            <Head>\n              <title>\n                Artist Store ‚Äî Page {page} of {pages}\n              </title>\n            </Head>\n\n            <div className=\"pagination\">\n              <Link\n                prefetch\n                href={{\n                  pathname: 'products',\n                  query: { page: page - 1 }\n                }}\n              >\n                <a aria-disabled={page <= 1}>‚Üê Previous</a>\n              </Link>\n              <p>\n                Page {page} of {pages}\n              </p>\n              <Link\n                prefetch\n                href={{\n                  pathname: 'products',\n                  query: { page: page + 1 }\n                }}\n              >\n                <a aria-disabled={page >= pages}>Next ‚Üí</a>\n              </Link>\n            </div>\n          </>\n        )\n      }}\n    </Query>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Link from 'next/link'\nimport formatMoney from '../lib/formatMoney'\nimport User from './User'\n\nclass Product extends React.Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired\n  }\n  render() {\n    const { product } = this.props\n    return (\n      <div className=\"product\">\n        <Link\n          href={{\n            pathname: '/product',\n            query: { id: product.id }\n          }}\n        >\n          <a>\n            {product.image && (\n              <img\n                className=\"image fluid\"\n                src={product.image}\n                alt={product.title}\n              />\n            )}\n            <span className=\"price\">{formatMoney(product.price)}</span>\n          </a>\n        </Link>\n        {/* <Link\n          href={{\n            pathname: '/singleProduct',\n            query: { id: product.id }\n          }}\n        >\n          <a>\n            {product.image && (\n              <img\n                className=\"image fluid\"\n                src={product.image}\n                alt={product.title}\n              />\n            )}\n            <span className=\"price\">{formatMoney(product.price)}</span>\n          </a>\n        </Link> */}\n      </div>\n    )\n  }\n}\n\nexport default Product\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport Product from './Product'\nimport Link from 'next/link'\nimport Pagination from './Pagination'\nimport { perPage } from '../config'\n\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    products(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n    }\n  }\n`\n\nconst ProductsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 50px;\n`\n\nclass Products extends React.Component {\n  render() {\n    return (\n      <Query\n        query={ALL_PRODUCTS_QUERY}\n        variables={{\n          skip: this.props.page * perPage - perPage\n        }}\n        fetchPolicy=\"network-only\"\n      >\n        {({ data, error, loading }) => {\n          if (loading) return <p>Loading...</p>\n          if (error)\n            return (\n              <ProductsGrid>\n                <Link href=\"/productAdd\">\n                  <a>\n                    <img src=\"/static/add.svg\" alt=\"Add a Product\" />\n                  </a>\n                </Link>\n                <p>Error: {error.message}</p>\n              </ProductsGrid>\n            )\n          console.log(data)\n          return (\n            <>\n              <ProductsGrid>\n                <Link href=\"/productAdd\">\n                  <a>\n                    <img src=\"/static/add.svg\" alt=\"Add a Product\" />\n                  </a>\n                </Link>\n                {data.products.map(product => (\n                  <Product product={product} key={product.id} />\n                ))}\n              </ProductsGrid>\n              <Pagination page={this.props.page} />\n            </>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default Products\nexport { ALL_PRODUCTS_QUERY }\n","import React, { Component } from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport Error from './ErrorMessage'\nimport styled from 'styled-components'\nimport Head from 'next/head'\nimport AddToCart from './AddToCart'\nimport formatMoney from '../lib/formatMoney'\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    product(where: { id: $id }) {\n      id\n      title\n      image\n      price\n      description\n    }\n  }\n`\nclass SingleProduct extends Component {\n  render() {\n    return (\n      <Query\n        query={SINGLE_PRODUCT_QUERY}\n        variables={{\n          id: this.props.id\n        }}\n      >\n        {({ error, loading, data }) => {\n          if (error) return <Error error={error} />\n          if (loading) return <p>Loading...</p>\n          if (!data.product)\n            return <p>No Product found for ID: {this.props.id}</p>\n          const product = data.product\n          return (\n            <div className=\"product-details\">\n              <div className=\"product-hero\">\n                <img\n                  id=\"hero\"\n                  className=\"fluid\"\n                  src={product.image || '/static/camera-icon.svg'}\n                  alt=\"Update Product Image\"\n                />\n              </div>\n              <div className=\"product-info\">\n                <div className=\"title-and-price\">\n                  <h4 className=\"product-title live-input\">{product.title}</h4>\n                  <h4 className=\"product-price live-input\">\n                    {formatMoney(product.price)}\n                  </h4>\n                </div>\n                <div className=\"product-description\">\n                  <textarea\n                    className=\"autoExpand live-input\"\n                    placeholder=\"Product Description\"\n                    type=\"text\"\n                    rows=\"5\"\n                    readOnly\n                  >\n                    {product.description}\n                  </textarea>\n                </div>\n                <div className=\"product-buttons\">\n                  <button id={product.id}>Temp</button>\n                  <AddToCart id={product.id} />\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default SingleProduct\n","import React from 'react'\n\nconst Title = props => {\n  return <h1 className=\"title bold\">{props.title}</h1>\n}\n\nexport default Title\n","import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport propTypes from 'prop-types'\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`\n\nconst User = props => (\n  <Query {...props} query={CURRENT_USER_QUERY}>\n    {payload => props.children(payload)}\n  </Query>\n)\n\nUser.propTypes = {\n  children: propTypes.func.isRequired\n}\n\nexport default User\nexport { CURRENT_USER_QUERY }\n","export const endpoint = `http://localhost:4444`\nexport const perPage = 7\n","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  }\n\n  if (amount % 100 === 0) options.minimumFractionDigits = 0\n  const formatter = new Intl.NumberFormat('en-US', options)\n  return formatter.format(amount / 100)\n}\n","import Title from '../components/Title'\nimport Products from '../components/Products'\nimport SingleProduct from '../components/SingleProduct'\n\nconst singleProduct = props => {\n  return (\n    <div>\n      <Title title=\"Product\" />\n      <SingleProduct id={props.query.id} />\n    </div>\n  )\n}\n\nexport default singleProduct\n","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"styled-components\");"],"mappingsxFA;AACA;AACA;AAEA;AACA;AAQA;;;;;;;;;;;;;AACA;AAAA;AAEA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAbA;AACA;AAcA;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAIA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;;;;AA5CA;AACA;AADA;AAEA;AADA;AACA;AA6CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;;;;AA1CA;AACA;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;;;;AArDA;AACA;AAuDA;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAEA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AACA;AAKA;AACA;AADA;AAIA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACDA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}