{"version":3,"file":"static/webpack/static/development/pages/product.js.0cf51a3f4be3a2d439ba.hot-update.js","sources":["webpack:///./components/Pagination.js","webpack:///./components/Products.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport { perPage } from '../config'\nimport Head from 'next/head'\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    productsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`\n\nconst Pagination = props => {\n  return (\n    <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return <p>Loading...</p>\n        const count = data.productsConnection.aggregate.count\n        const pages = Math.ceil(count / perPage)\n        const page = props.page\n        return (\n          <>\n            <Head>\n              <title>\n                Artist Store â€” Page {page} of {pages}\n              </title>\n            </Head>\n            <Link\n              prefetch\n              href={{\n                pathname: 'products',\n                query: { page: page - 1 }\n              }}\n            >\n              <a aria-disabled={page <= 1}>Previous</a>\n            </Link>\n            <ul className=\"pagination\">\n              <li>\n                Page {page} of {pages}\n              </li>\n            </ul>\n            <Link\n              prefetch\n              href={{\n                pathname: 'products',\n                query: { page: page + 1 }\n              }}\n            >\n              <a aria-disabled={page >= pages}>Next</a>\n            </Link>\n          </>\n        )\n      }}\n    </Query>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport Product from './Product'\nimport Link from 'next/link'\nimport Pagination from './Pagination'\n\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    products {\n      id\n      title\n      price\n      description\n      image\n    }\n  }\n`\n\nconst ProductsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 50px;\n`\n\nclass Products extends React.Component {\n  render() {\n    return (\n      <Query query={ALL_PRODUCTS_QUERY}>\n        {({ data, error, loading }) => {\n          if (loading) return <p>Loading...</p>\n          if (error)\n            return (\n              <ProductsGrid>\n                <Link href=\"/productAdd\">\n                  <a>\n                    <img src=\"/static/add.svg\" alt=\"Add a Product\" />\n                  </a>\n                </Link>\n                <p>Error: {error.message}</p>\n              </ProductsGrid>\n            )\n          console.log(data)\n          return (\n            <>\n              <ProductsGrid>\n                <Link href=\"/productAdd\">\n                  <a>\n                    <img src=\"/static/add.svg\" alt=\"Add a Product\" />\n                  </a>\n                </Link>\n                {data.products.map(product => (\n                  <Product product={product} key={product.id} />\n                ))}\n              </ProductsGrid>\n              <Pagination page={this.props.page} />\n            </>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default Products\nexport { ALL_PRODUCTS_QUERY }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;;;;AApCA;AACA;AAsCA;;;;;A","sourceRoot":""}