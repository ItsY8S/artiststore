{"version":3,"file":"static/webpack/static/development/pages/productAdd.js.6980c22e7fdd90de4519.hot-update.js","sources":["webpack:///./components/ProductAdd.js"],"sourcesContent":["import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport formatMoney from '../lib/formatMoney'\nimport Meta from './Meta'\nimport setAttributes from '../lib/setAttributes'\nimport Error from './ErrorMessage'\nimport Router from 'next/router'\n\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    $title: String!\n    $price: Int!\n    $description: String!\n    $image: String\n  ) {\n    createProduct(\n      title: $title\n      price: $price\n      description: $description\n      image: $image\n    ) {\n      id\n    }\n  }\n`\n\nclass ProductAdd extends React.Component {\n  state = {\n    title: '',\n    price: 0,\n    description: '',\n    image: ''\n  }\n\n  handleChange = e => {\n    const { name, type, value } = e.target\n    // console.log(e)\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n\n  handleSwapInput = e => {\n    const itExists = document.querySelector('.exists')\n    if (itExists == null) {\n      setAttributes(e.target, {\n        class: 'big-again fluid'\n      })\n      const productImageInput = document.createElement('input')\n      setAttributes(productImageInput, {\n        class: 'live-input exists product-hero',\n        type: 'file',\n        accept: 'image/png, image/jpeg',\n        name: 'image',\n        style: 'display: none',\n        onchange:\n          \"document.getElementById('hero').src = window.URL.createObjectURL(this.files[0])\"\n      })\n      e.target.parentNode.appendChild(productImageInput)\n      productImageInput.click()\n    } else {\n      console.log('Still click it.')\n      const productHeroInput = document.querySelector('.live-input')\n      productHeroInput.click()\n    }\n  }\n\n  uploadFile = async e => {\n    console.log('uploading file')\n    const files = e.target.files\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'artiststore')\n\n    const res = await fetch(\n      'https://api.cloudinary.com/v1_1/y8s/image/upload',\n      {\n        method: 'POST',\n        body: data\n      }\n    )\n    const file = await res.json()\n    console.log(file)\n    this.setState({\n      image: file.secure_url\n    })\n    document.getElementById('hero').src = window.URL.createObjectURL(\n      this.files[0]\n    )\n  }\n\n  render() {\n    return (\n      <Mutation mutation={CREATE_PRODUCT_MUTATION} variables={this.state}>\n        {(createProduct, { loading, error }) => (\n          <form\n            onSubmit={async e => {\n              e.preventDefault()\n              const res = await createProduct()\n              console.log(res)\n              Router.push({\n                pathname: '/product',\n                query: { id: res.data.createProduct.id }\n              })\n            }}\n          >\n            <Error error={error} />\n            <div className=\"product-details\">\n              <div className=\"product-hero\">\n                <label htmlFor=\"file\">\n                  <img\n                    id=\"hero\"\n                    className=\"fluid\"\n                    src=\"/static/camera-icon.svg\"\n                    alt=\"Add Product Image\"\n                    // onClick={this.handleSwapInput}\n                    // onChange={this.handleChange}\n                  />\n                </label>\n                <input\n                  type=\"file\"\n                  className=\"live-input product-hero big-again fluid\"\n                  id=\"file\"\n                  accept=\"image/png, image/jpeg\"\n                  name=\"image\"\n                  style={{ display: 'none' }}\n                  onChange={this.uploadFile}\n                />\n              </div>\n              <div className=\"product-info\">\n                <div className=\"title-and-price\">\n                  <input\n                    className=\"product-title live-input\"\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Product Title\"\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                    required\n                  />\n                  <input\n                    className=\"product-price live-input\"\n                    type=\"number\"\n                    name=\"price\"\n                    placeholder=\"Price\"\n                    value={this.state.price}\n                    onChange={this.handleChange}\n                    required\n                  />\n                </div>\n                <div className=\"product-description\">\n                  <textarea\n                    className=\"autoExpand live-input\"\n                    name=\"description\"\n                    placeholder=\"Product Description\"\n                    rows=\"5\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={this.state.description}\n                  />\n                </div>\n                <div className=\"product-buttons\">\n                  <button className=\"inherit\">Back</button>\n                  <button className=\"inherit save\" type=\"submit\">\n                    Add\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default ProductAdd\nexport { CREATE_PRODUCT_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAiBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAUA;AACA;AAFA;AACA;AAVA;AAOA;AAPA;AAAA;AACA;AADA;AAcA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAuBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArEA;AA+EA;;;;AAlJA;AACA;AAoJA;;;;;A","sourceRoot":""}