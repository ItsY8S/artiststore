{"version":3,"file":"static/webpack/static/development/pages/product.js.c46ba3ef2e2ea3f4bf9d.hot-update.js","sources":["webpack:///./components/Pagination.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport { perPage } from '../config'\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    productsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`\n\nconst Pagination = () => {\n  return (\n    <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return <p>Loading...</p>\n        const count = data.productsConnection.aggregate.count\n        const pages = Math.ceil(count / perPage)\n        return (\n          <ul className=\"pagination\">\n            <li>\n              <Link href=\"/somewhere\">\n                <a>1</a>\n              </Link>\n              Page {props.page} of {pages}\n            </li>\n          </ul>\n        )\n      }}\n    </Query>\n  )\n}\n\nexport default Pagination\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;;;;A","sourceRoot":""}