{"version":3,"file":"static/webpack/static/development/pages/product.js.72063bf4bbb61cc71c57.hot-update.js","sources":["webpack:///./components/ProductUpdate.js"],"sourcesContent":["import React from 'react'\nimport { Mutation, Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport formatMoney from '../lib/formatMoney'\nimport Meta from './Meta'\nimport setAttributes from '../lib/setAttributes'\nimport Error from './ErrorMessage'\nimport Router from 'next/router'\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    product(where: { id: $id }) {\n      id\n      title\n      description\n      price\n      image\n    }\n  }\n`\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $title: String!\n    $price: Int!\n    $description: String!\n    $image: String\n  ) {\n    updateProduct(\n      title: $title\n      price: $price\n      description: $description\n      image: $image\n    ) {\n      id\n    }\n  }\n`\n\nclass ProductUpdate extends React.Component {\n  state = {}\n\n  handleChange = e => {\n    const { name, type, value } = e.target\n    // console.log(e)\n    const val = type === 'number' ? parseFloat(value) : value\n    this.setState({ [name]: val })\n  }\n\n  handleSwapInput = e => {\n    const itExists = document.querySelector('.exists')\n    if (itExists == null) {\n      setAttributes(e.target, {\n        class: 'big-again fluid'\n      })\n      const productImageInput = document.createElement('input')\n      setAttributes(productImageInput, {\n        class: 'live-input exists product-hero',\n        type: 'file',\n        accept: 'image/png, image/jpeg',\n        name: 'image',\n        style: 'display: none',\n        onchange:\n          \"document.getElementById('hero').src = window.URL.createObjectURL(this.files[0])\"\n      })\n      e.target.parentNode.appendChild(productImageInput)\n      productImageInput.click()\n    } else {\n      console.log('Still click it.')\n      const productHeroInput = document.querySelector('.live-input')\n      productHeroInput.click()\n    }\n  }\n\n  uploadFile = async e => {\n    console.log('uploading file')\n    const files = e.target.files\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'artiststore')\n\n    const res = await fetch(\n      'https://api.cloudinary.com/v1_1/y8s/image/upload',\n      {\n        method: 'POST',\n        body: data\n      }\n    )\n    const file = await res.json()\n    console.log(file)\n    this.setState({\n      image: file.secure_url\n    })\n    const hero = document.querySelector('#hero')\n    hero.src = this.state.image\n    hero.classList.remove('two-hundred')\n  }\n\n  updateProduct = (e, updateProductMutation) => {\n    e.preventDefault()\n    console.log('updating product')\n    console.log(this.state)\n  }\n\n  render() {\n    return (\n      <Query query={SINGLE_ITEM_QUERY} variables={{ id: this.props.id }}>\n        {({ data, loading }) => {\n          if (loading) return <p>Loading...</p>\n          if (!data.product)\n            return <p>No product found for ID: {this.props.id}</p>\n          return (\n            <Mutation mutation={UPDATE_PRODUCT_MUTATION} variables={this.state}>\n              {(updateProduct, { loading, error }) => (\n                <form onSubmit={e => this.updateProduct(e, updateProduct)}>\n                  <Error error={error} />\n                  <div className=\"product-details\">\n                    <div className=\"product-hero\">\n                      <label htmlFor=\"file\">\n                        <img\n                          id=\"hero\"\n                          className=\"fluid two-hundred\"\n                          src=\"/static/camera-icon.svg\"\n                          alt=\"Update Product Image\"\n                        />\n                      </label>\n                      <input\n                        type=\"file\"\n                        className=\"live-input product-hero big-again fluid\"\n                        id=\"file\"\n                        accept=\"image/png, image/jpeg\"\n                        name=\"image\"\n                        style={{ display: 'none' }}\n                        onChange={this.uploadFile}\n                      />\n                    </div>\n                    <div className=\"product-info\">\n                      <div className=\"title-and-price\">\n                        <input\n                          className=\"product-title live-input\"\n                          type=\"text\"\n                          name=\"title\"\n                          placeholder=\"Product Title\"\n                          defaultValue={data.product.title}\n                          onChange={this.handleChange}\n                          required\n                        />\n                        <input\n                          className=\"product-price live-input\"\n                          type=\"number\"\n                          name=\"price\"\n                          placeholder=\"Price\"\n                          defaultValue={data.product.price}\n                          onChange={this.handleChange}\n                          required\n                        />\n                      </div>\n                      <div className=\"product-description\">\n                        <textarea\n                          className=\"autoExpand live-input\"\n                          name=\"description\"\n                          placeholder=\"Product Description\"\n                          rows=\"5\"\n                          type=\"text\"\n                          onChange={this.handleChange}\n                          defaultValue={data.product.description}\n                        />\n                      </div>\n                      <div className=\"product-buttons\">\n                        <button className=\"inherit\">Back</button>\n                        <button className=\"inherit save\" type=\"submit\">\n                          Add\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              )}\n            </Mutation>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default ProductUpdate\nexport { UPDATE_PRODUCT_MUTATION }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AACA;AAiBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAUA;AACA;AAFA;AACA;AAVA;AAOA;AAPA;AAAA;AACA;AADA;AAcA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzDA;AAmEA;AAGA;;;;AAhJA;AACA;AAkJA;;;;;A","sourceRoot":""}