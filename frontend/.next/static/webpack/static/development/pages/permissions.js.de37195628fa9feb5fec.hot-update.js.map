{"version":3,"file":"static/webpack/static/development/pages/permissions.js.de37195628fa9feb5fec.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query } from 'react-apollo'\nimport Error from './ErrorMessage'\nimport gql from 'graphql-tag'\nimport PropTypes from 'prop-types'\nimport { check } from 'graphql-anywhere'\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE'\n]\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`\n\nconst Permissions = props => (\n  <Query query={ALL_USERS_QUERY}>\n    {({ data, loading, error }) => (\n      <div>\n        <Error error={error} />\n        <div>\n          <h4 className=\"bold\">Permissions</h4>\n          <table id=\"permissions\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map(permission => (\n                  <th key={permission}>{permission}</th>\n                ))}\n                <th>üëáüèª</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.users.map(user => (\n                <UserPermissions user={user} key={user.id} />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )}\n  </Query>\n)\n\nclass UserPermissions extends React.Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      email: PropTypes.string,\n      permissions: PropTypes.array\n    }).isRequired\n  }\n\n  state = {\n    permissions: this.props.user.permissions\n  }\n\n  handlePermissionChange = e => {\n    const checkbox = e.target\n    let updatedPermissions = [...this.state.permissions]\n    if (checkbox.checked) {\n      updatedPermissions.push(checkbox.value)\n    } else {\n      updatedPermissions = updatedPermissions.filter(\n        permission => permission !== checkbox.value\n      )\n    }\n    this.setState({\n      permissions: updatedPermissions\n    })\n  }\n\n  render() {\n    const user = this.props.user\n    return (\n      <tr>\n        <td>{user.name}</td>\n        <td>{user.email}</td>\n        {possiblePermissions.map(permission => (\n          <td key={permission}>\n            <label htmlFor={`${user.id}-permission-${permission}`}>\n              <input\n                type=\"checkbox\"\n                checked={this.state.permissions.includes(permission)}\n                value={permission}\n                onChange={this.handlePermissionChange}\n              />\n            </label>\n          </td>\n        ))}\n        <td>\n          <button className=\"inherit save\">Update</button>\n        </td>\n      </tr>\n    )\n  }\n}\n\nexport default Permissions\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAjBA;AAFA;AACA;AA6BA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AApDA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAqDA;;;;A","sourceRoot":""}