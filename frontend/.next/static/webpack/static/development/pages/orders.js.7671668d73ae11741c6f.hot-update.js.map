{"version":3,"file":"static/webpack/static/development/pages/orders.js.7671668d73ae11741c6f.hot-update.js","sources":["webpack:///./components/Orders.js"],"sourcesContent":["import React from 'react'\nimport { Query } from 'react-apollo'\nimport { formatDistance } from 'date-fns'\nimport Link from 'next/link'\nimport styled from 'styled-components'\nimport gql from 'graphql-tag'\nimport formatMoney from '../lib/formatMoney'\nimport OrderItemStyles from './styles/OrderItemStyles'\nimport Error from './ErrorMessage'\nimport OrderStyles from './styles/OrderStyles'\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n`\n\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-gap: 4rem;\n  grid-template-columns: repeat(auto-fit, minmax(40%, 1fr));\n`\n\nclass Orders extends React.Component {\n  render() {\n    return (\n      <Query query={USER_ORDERS_QUERY}>\n        {({ data: { orders }, loading, error }) => {\n          if (error) return <Error error={error} />\n          if (loading) return <p>Loading...</p>\n          return (\n            <div>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Order Image</th>\n                    <th># of Items</th>\n                    <th>Ordered</th>\n                    <th>Order Total</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {orders.map(order => (\n                    <tr key={order.items.id}>\n                      <td>\n                        <img src={order.items[0].image} />\n                      </td>\n                      <td>\n                        {order.items.reduce((a, b) => a + b.quantity, 0)}{' '}\n                      </td>\n                      <td>{formatDistance(order.createdAt, new Date())}</td>\n                      <td>{formatMoney(order.total)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n\n              {/* <h2>You have {orders.length} orders</h2>\n              <OrderUl>\n                {orders.map(order => (\n                  <OrderItemStyles key={order.id}>\n                    <Link\n                      href={{\n                        pathname: '/order',\n                        query: { id: order.id }\n                      }}\n                    >\n                      <a>\n                        <div className=\"order-meta\">\n                          <p>\n                            {order.items.reduce((a, b) => a + b.quantity, 0)}{' '}\n                            Items\n                          </p>\n                          <p>{order.items.length} Products</p>\n                          <p>{formatDistance(order.createdAt, new Date())}</p>\n                          <p>{formatMoney(order.total)}</p>\n                        </div>\n                        <div className=\"images\">\n                          {order.items.map(item => (\n                            <img\n                              src={item.image}\n                              alt={item.title}\n                            />\n                          ))}\n                        </div>\n                      </a>\n                    </Link>\n                  </OrderItemStyles>\n                ))}\n              </OrderUl> */}\n            </div>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default Orders\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAkBA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAkDA;AAGA;;;;AAxEA;AACA;AA0EA;;;;A","sourceRoot":""}